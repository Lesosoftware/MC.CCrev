
local tArgs = { ... }

if CoreAPI_started then
  
  if tArgs=="lang" then
    
    langu=fs.list(regProgs_eReader.."languages")
    
    for k,v in pairs(langu)
      
      if fs.exist(regProgs_eReader.."languages/"..v)
        shell.run(regProgs_eReader.."languages/"..v)
      else
        term.setTextColor(colors.red)
        print("Error: Speech Pakets doesn't exist")
        term.setTextColor(colors.white)
        print("Following Speech Pakets exist:")
        
        for k,v in pairs(langu) do
          
          print(v)
        
        end
        
      end
      
    end
  elseif tArgs = "getBooks"
    
    print("Following books exist:")
    
    for k,v in pairs do
      
      local tX,tY = getCursorPos()
      
      if tY==18 or tY==19 then
        term.setCursorPos(1,19)
        write("Pres any key to continue")
      end
      print(v)
    
    end

  elseif #tArgs == 1 then
  
    bookPath = tArgs[1]
    pages = fs.list( regProgs_eReader.."E-books/"..bookPath )
    
    local tmpLst = {}
    local tmpCnt = 1
    
    for k,v in pairs(pages) do
      tmpLst[tmpCnt]=v
      tmpCnt=tmpCnt+1
    end
    pages=tmpLst
    
    site = 1
    totalPages = #pages
    
    term.setTextColor( colors.black )
    term.setBackgroundColor( colors.white )
    
    term.clear()
    term.setCursorPos(1,1)
    
      term.clear()
      term.setCursorPos(1,1)
      
      function viewBTitle()
        print(string.gsub(string.sub(pages[site],4),"_"," ").."")
        print("")

        botText = "Seite "..site.." von "..totalPages
      end
      
      local next = function()
        site = site+1
        if site>totalPages then
          site = 1
        end
        seite = CORE.readFile( regProgs_eReader.."E-Books/"..bookPath.."/"..pages[site] )
        renderBook()
      end
      
      local previos = function()
        site = site-1
        if site<1 then
          site=totalPages
        end
        seite = CORE.readFile( regProgs_eReader.."E-Books/"..bookPath.."/"..pages[site] )
        renderBook()
      end
      
      renderBook=function()
        -- Sonderzeichen konvertieren:
        
        seite = string.gsub(seite,"|oe|",CORE.readFile(regProgs_eReader.."E-Konverter/oe"))
        seite = string.gsub(seite,"|ae|",CORE.readFile(regProgs_eReader.."E-Konverter/ae"))
        seite = string.gsub(seite,"|ue|",CORE.readFile(regProgs_eReader.."E-Konverter/ue"))
      
        seite = string.gsub(seite,"|OOE|",CORE.readFile(regProgs_eReader.."E-Konverter/OOE"))
        seite = string.gsub(seite,"|AAE|",CORE.readFile(regProgs_eReader.."E-Konverter/AAE"))
        seite = string.gsub(seite,"|UUE|",CORE.readFile(regProgs_eReader.."E-Konverter/UUE"))
        -- Seite anzeigen:
        
        term.clear()
        term.setCursorPos(1,1)      
        viewBTitle()
        print(seite)
        term.setCursorPos( 52 - string.len(botText),19)
        write(botText)
      end
      
      seite=CORE.readFile(regProgs_eReader.."E-Books/"..bookPath.."/"..pages[site])
      
      renderBook()
      
      CORE.bindKey( keys.right, next )
      CORE.bindKey( keys.left, previos )

    local tmpKey1=keys.q
    
    while (tmpKey1==keys.e)==false do
      local id,tmpKey=os.pullEvent("key")
      tmpKey1=tmpKey
    end

  term.setBackgroundColor( colors.black )
  term.setTextColor( colors.white )
  term.clear()
  term.setCursorPos(1,1)  
  CORE.unbindKey ( keys.right )
  CORE.unbindKey ( keys.left )
  elseif #tArgs == 0
  
    print("Usage: reader <book> or getBooks or lang <language>")
  
  end
  
else

  print("Error: No CORE.API")
  
end
