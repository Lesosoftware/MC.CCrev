--shortFunc
  local function cl() term.clear() end
  local function scp(sX,sY) term.setCursorPos(sX,sY) end
  local function gcp() return(term.getCursorPos()) end
  local function w(sText) write(sText) end
  local function p(sText) print(sTsxt) end
  local function scb(blink) term.setCursorBlink(blink) end
  local function sbc(col) term.setBackgroundColour(col) end
  local function stc(col) term.setTextColour(col) end
  local function pudi(loadImg,tX,tY) paintutils.drawImage(paintutils.loadImage(tostring(loadImg)),tX,tY) end
--end

--variabels
  local COREpath   ="/OS/system32/CORE/"
  StartLoadMSG     ="CORE system starting"
  ReadyLoadMSG     ="CORE system is ready"
  COREversion      ="CORE version 1.0"
--end

--functions

  local function ScrBack()
    
    for doIt=1,2 do
      col1=colours.blue
      col2=colours.lightBlue
      if doIt==1 then
        scp(1,1)
        fY=1
      elseif doIt==2 then
        scp(1,2)
        fY=2
        col1=colours.lightBlue
        col2=colours.blue
      end 
       
      for lines=1,19/2 do
        for chars=1,51/4+1 do
          sbc(col1)
          w("  ")
          sbc(col2)
          w("  ")
        end
        
        fY=fY+2
        scp(1,fY)  
      end
    end
    
    scp(1,19)
    
    for chars=1,51/4+1 do
      sbc(colours.blue)
      w("  ")
      sbc(colours.lightBlue)
      w("  ")
    end
  end

  local function devicesBind()
  
  end

--end

--StartLoad
  cl()
  scp(51-#StartLoadMSG,19)
  w(StartLoadMSG)
  sleep(0)
  scp(1,1)
  
  scb(true)
  
  if regAPIstarted==nil then
    shell.run("/OS/registry/reg.API")
  end
  
  sleep(0)
  reg.load(true)
  
  if regAPI_CORE_API==nil then
    reg.assign(true,"CORE","CORE_API","/OS/APIs/CORE-API/")
    reg.load()
  end
  
  scb(false)
  sleep(0)
  reg.load(false)
  sleep(0)
  scb(true)
  sleep(0.2)
  scp(51-#ReadyLoadMSG,19)
  w(ReadyLoadMSG)
  scp(1,1)
  sleep(0.25)
--end

--BOOTscreen
--  ScrBack()
  sbc(colors.black)
  cl()
  scb(false)
  pudi(COREpath.."rom/media/BootScreen.png",1,1)
  shell.run(regAPI_CORE_API.."CORE.API")
  sleep(0)
  sbc(colours.black)
  stc(colours.white)
  
  cl()
  
  scp(1,1)
  scb(true)
  sleep(0)
  scb(false)
  sleep(0)
  scb(true)
  sleep(0)
  
  scb(false)
  
  devicesBind()
  
  sbc(colours.grey)
  cl()
--shell.run(COREpath.."config/UserManager")
  
  cl()
  
  --shell.run(COREpath.."rom/apis/window")
  shell.run(COREpath.."rom/COREshell")

--end  
